---
title: "Student Achievement, Class Leaders, and Summer Support Research"
author: "David Agboola"
date: "4/15/2021"
output:
 html_document:
  toc: true
  toc_float: true
---

```{r setup, include=TRUE}
knitr::opts_chunk$set(echo = TRUE)
```

<!-- <a href="#Analysis 1: Student Achievement and Class Leaders Research - Comparing Student Outcomes between Participants and Non-Participants of UNIV 101 ">First section</a><br> -->
<!-- <a href="#Analysis 2: Student Achievement and Class Leaders Research - Comparing Program With CLs Versus Program Without CLs">Second section</a><br> -->
<!-- <a href="#Analysis 3: Summer Support Research - Comparing Student Outcomes for Summer Support Participants Versus Summer Support Non-Participants">Third section</a><br> -->
<!-- <a href="#Analysis 4: Summer Support Research - Comparing Student Outcomes for Program with Summer Support versus Program Without Summer Support">Fourth section</a> -->

## Analysis 1: Student Achievement and Class Leaders Research - Comparing Student Outcomes between Participants and Non-Participants of UNIV 101 

1ST TERM GPA and 1 YR Persistence (enrolled in at least 12 credits the second fall)

```{r analysis1, tidy=TRUE, warning=FALSE, message=FALSE}
library(dplyr)
library(ggplot2)
library(MatchIt)
library(gridExtra)
library(car)
library(rstatix)
library(ResourceSelection)
library(cobalt)
library(tableone)
library(ggpubr)
library(car)
#library(optmatch) # to use method = "full" for matching
SS <- readxl::read_xlsx("/Users/agboo/OneDrive - University of Northern Colorado/Analysis/UNIV101_SS/2013 - 2019 - one year_CODED.xlsx")
SS <- as.data.frame(SS)
colnames(SS)[1] <- "ID"
colnames(SS)[4] <- "Gender"
sum(is.na(SS))/prod(dim(SS)) # missingness < 5%
SS$ID[duplicated(SS$ID)] # identify duplicates - 801446473
SS <- SS[-7558,] # remove duplicate in 2016
SS <- SS %>%
  mutate(
    BLACK = as.factor(BLACK),
    NAT_AMER = as.factor(NAT_AMER),
    ASIAN = as.factor(ASIAN),
    PAC_ISLANDER = as.factor(PAC_ISLANDER),
    HISPANIC = as.factor(HISPANIC),
    YEAR = as.numeric(YEAR),
    PERSIST_1YR = as.factor(PERSIST_1YR),
    SEM_1_TERM_GPA = as.numeric(SEM_1_TERM_GPA),
    CL = as.factor(CL),
    Gender = as.factor(Gender),
    FIRST_GEN = as.factor(FIRST_GEN),
    HS_GPA = as.numeric(HS_GPA),
    SUCC_UNIV_101 = as.factor(SUCC_UNIV_101),
    SEM_1_CREDITS = as.numeric(SEM_1_CREDITS),
    TOOK_UNIV_101 = as.factor(TOOK_UNIV_101),
    SOC = as.factor(ifelse(BLACK == "1"| NAT_AMER == "1" | ASIAN == "1"| PAC_ISLANDER == "1"| HISPANIC == "1","1","0" )),
    FIRST_GEN = as.factor(ifelse(FIRST_GEN == "1","1",ifelse(FIRST_GEN == "0", "0", NA)))
  )


## Student Outcomes comparing participants and non-participants from 2016 to 2019. ##
## Outcomes: 1st term GPA and 1-year persistence ##
SS_16_19 <- subset(SS, YEAR > 2015) #7835 out of 13616
ExpGrp1 <- subset(SS_16_19, CL == "1" , select = c(CL,YEAR,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1YR)) #962 students
CntGrp1 <- subset(SS_16_19, SUCC_UNIV_101 == "0" & CL == "0" , select = c(CL,YEAR,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1YR)) # 6192
Std_Out1 <- rbind(ExpGrp1,CntGrp1) # 7154

# PSM for GPA AND 1 YR PERSISTENCE #
Std_Out1 %>%
  group_by(CL) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1YR=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))

# getmode <- function(v) {
#    uniqv <- unique(v)
#    uniqv[which.max(tabulate(match(v, uniqv)))]
# }
# getmode(Std_Out1$SEM_1_TERM_GPA) -4
with(Std_Out1, t.test(SEM_1_TERM_GPA ~ CL)) #- pvalue < .05 diff in means != 0
with(Std_Out1, chisq.test(table(PERSIST_1YR, CL)))


# Difference-in-means: pre-treatment covariates #
# SMD greater than 0.1 means imbalance of covariates #
Std_Out1_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_before1 <- CreateTableOne(vars = Std_Out1_cov, data = Std_Out1, strata = 'CL', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_before1 <- print(ImbTab_before1, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))


###  Propensity Score Estimation  ###

# LogR2 <- glm(CL ~ SOC + Gender + HS_GPA + FIRST_GEN + SEM_1_CREDITS,
#             family = binomial(), data = Std_Out2)
# summary(LogR2)
# 
# PSM2 <- data.frame(prop_score = predict(LogR2, type = "response"),
#                      CL = LogR2$model$CL) # calculate prop score for each student
# #head(PSM2)
# 
# # Examining the region of common support
# labs <- paste("Presence of Class Leader:", c("Yes", "No"))
# PSM2 %>%
#   mutate(CL = ifelse(CL == "1", labs[1], labs[2])) %>%
#   ggplot(aes(x = prop_score)) +
#   geom_histogram(color = "white") +
#   facet_wrap(~CL) +
#   xlab("Probability of having a Class Leader") +
#   theme_bw()


###################################
###  Propensity Score Matching  ###
###################################

# Executing a matching algorithm
Std_Out1_nomiss <- na.omit(Std_Out1)   # MatchIt does not allow missing values so we remove them

PSM1_match <- matchit(CL ~ SOC + Gender + HS_GPA + FIRST_GEN + SEM_1_CREDITS,
                     method = "nearest", data = Std_Out1_nomiss, caliper = .1)

#Check matching
summary(PSM1_match)
plot(PSM1_match)

# Extract matched dataset
finalData1 <- match.data(PSM1_match) 
dim(finalData1) #1916 obs
head(finalData1) 

# Examining covariate balance in the matched sample
# Visual inspection
# It is useful to plot the mean of each covariate against the estimated propensity score, separately by treatment status. If matching is done well, the treatment and control groups will have (near) identical means of each covariate at each value of the propensity score.
# Check covariate balance #
bal.tab(PSM1_match,m.threshold=0.1)

Chk_bal1 <- function(dta, variable) {
  dta$variable <- dta[, variable]
  if (variable == 'Gender') dta$variable <- as.numeric(dta$variable)
  if (variable == 'FIRST_GEN') dta$variable <- as.numeric(dta$variable)
  if (variable == 'SOC') dta$variable <- as.numeric(dta$variable)
  if (variable == 'PERSIST_1YR') dta$variable <- as.numeric(dta$variable)
  dta$CL <- as.factor(dta$CL)
  support <- c(min(dta$variable), max(dta$variable))
  ggplot(dta, aes(x = distance, y = variable, color = CL)) +
    geom_point(alpha = 0.2, size = 1.3) +
    geom_smooth(method = "loess", se = F) +
    xlab("Propensity score") +
    ylab(variable) +
    theme_bw() +
    ylim(support)
}


grid.arrange(
   Chk_bal1(finalData1, "SEM_1_TERM_GPA"),
   Chk_bal1(finalData1, "SOC") + theme(legend.position = "none"),
   Chk_bal1(finalData1, "HS_GPA"),
   Chk_bal1(finalData1, "Gender") + theme(legend.position = "none"),
   Chk_bal1(finalData1, "FIRST_GEN"),
   Chk_bal1(finalData1, "SEM_1_CREDITS"),
   Chk_bal1(finalData1, "PERSIST_1YR"),
   nrow = 4, widths = c(1, 0.8)
)


# LOVE PLOT #
# Can be used in publications #
# Expect adjusted values to be within dashed lines #
v <- data.frame(old = c("SOC","Gender","HS_GPA","FIRST_GEN","SEM_1_CREDITS"), new = c("Stdt of Color", "Gender", "High Sch GPA",'First Gen Status','# of Credits'))
love.plot(bal.tab(PSM1_match, m.threshold=0.1), stat = "mean.diffs", var.names = v, abs = F)


#Difference-in-means
# SMD greater than 0.1 means imbalance of covariates #
# You can test this more formally using t-tests. Ideally, we should not be able to reject the null hypothesis of no mean difference for each covariate:
Std_Out1_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_after1 <- CreateTableOne(vars = Std_Out1_cov, data = finalData1, strata = 'CL', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_after1 <- print(ImbTab_after1, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))

# Variance Ratio #
# Less than 2 generally acceptable #
bal.tab(PSM1_match,v.threshold=2) 

# Prognostic Score for Assessing Balance #
# Performs better than MD and significance tests
# Expect SMD < .1 #
ctrl.data1 <- Std_Out1[Std_Out1$CL == "0",]
ctrl.fit1.y1 <- lm(SEM_1_TERM_GPA ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, data = ctrl.data1)
ctrl.fit1.y2 <- glm(PERSIST_1YR ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, family = binomial(), data = ctrl.data1)
Std_Out1$prog.score.y1 <- predict.lm(ctrl.fit1.y1, Std_Out1)
Std_Out1$prog.score.y2 <- predict.glm(ctrl.fit1.y2, Std_Out1)
bal.tab(PSM1_match, distance = na.omit(Std_Out1["prog.score.y1"])) # SMD < .1
bal.tab(PSM1_match, distance = na.omit(Std_Out1["prog.score.y2"])) # SMD < .1


# Distribition plot for numeric variable #
#(bal.plot(PSM2_match,var.name = 'HS_GPA',which = 'both'))
# Barplot for categorical variable #
#(bal.plot(PSM2_match,var.name = 'SOC',which = 'both'))

# Final Analysis #
# GPA by group #
finalData1 %>%
  group_by(SOC, FIRST_GEN, CL) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA))

finalData1  %>%
  group_by(CL) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1YR=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))


# Assumption Check #
CL1 <- subset(finalData1, CL=="1") # subset of students with CL
CL0 <- subset(finalData1, CL=="0") # subset of students without CL
CL1_FS <- subset(finalData1, CL=="1" & FIRST_GEN=="1" & SOC == "1")
CL0_FS <- subset(finalData1, CL=="0" & FIRST_GEN=="1" & SOC == "1")
CL_FS <- rbind(CL1_FS,CL0_FS)
hist(CL1$SEM_1_TERM_GPA, main = "With CL") # Distribution of students' GPA for those with CL
hist(CL0$SEM_1_TERM_GPA, main = "Without CL") # Distribution of students' GPA for those without CL
ggqqplot(finalData1$SEM_1_TERM_GPA)
shapiro.test(finalData1$SEM_1_TERM_GPA) # fails normality assumption
leveneTest(SEM_1_TERM_GPA ~ CL, data=finalData1)

summary(CL1)
# t-test #
with(CL1, t.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #t-test GPA by FIRST GEN students with CL
with(CL1, t.test(SEM_1_TERM_GPA ~ SOC)) #t-test GPA by SOC with CL
with(CL_FS, t.test(SEM_1_TERM_GPA ~ CL))
with(finalData1, t.test(SEM_1_TERM_GPA ~ CL, alternative = c("greater"))) #t-test GPA by CL overall
# all p-values < .05 - statistically significant

# Mann-Whitney-Wilcoxon #
with(CL1, wilcox.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #Mann-Whitney-Wilcoxon test GPA by FIRST GEN students with CL
with(CL1, wilcox.test(SEM_1_TERM_GPA ~ SOC)) #Mann-Whitney-Wilcoxon test GPA by SOC with CL
with(finalData1, wilcox.test(SEM_1_TERM_GPA ~ CL)) #Mann-Whitney-Wilcoxon test GPA by CL overall
# all p-values < .05 - statistically significant
# 1ST SEMESTER GPA on average is different by First Gen Status and being SOC with CL present. It is also different overall based on CL presence #

#ANOVmod1 <- aov(SEM_1_TERM_GPA ~ SOC*CL*FIRST_GEN, data=finalData1) # 3-way ANOVA to avoid error of multiple testing. One Interaction is significant: SOC & FIRST GEN
#summary(ANOVmod1) # main effects are significant p-value < .05 with 2 two way interactions - SOC & FirstGen, SOC & CL
## Check Assumptions ##
# Normality
#qqnorm(ANOVmod1$residuals)
#qqline(ANOVmod1$residuals) # fails normality assumption
# Compute Shapiro-Wilk test of normality - fails normality assumption p < .05
#shapiro.test(ANOVmod1$residuals)


# PostHoc Test
#TukeyHSD(ANOVmod1)

# Two-Way Tables 
xtabs(~finalData1$PERSIST_1YR+finalData1$CL)
prop.table(xtabs(~finalData1$PERSIST_1YR+finalData1$CL))
xtabs(~CL1$PERSIST_1YR+CL1$SOC)
prop.table(xtabs(~CL1$PERSIST_1YR+CL1$SOC))
xtabs(~CL1$PERSIST_1YR+CL1$FIRST_GEN)
prop.table(xtabs(~CL1$PERSIST_1YR+CL1$FIRST_GEN))
# all four expected counts are at least 5 

# Counts
CL1 %>%
group_by(PERSIST_1YR, SOC, FIRST_GEN) %>% # to get the counts in each subgroup for CL
summarize(count = n())

# Counts
CL0 %>%
group_by(PERSIST_1YR, SOC, FIRST_GEN) %>% # to get the counts in each subgroup for non-CL
summarize(count = n())


# Chi-square test of Homogeneity #
with(finalData1, chisq.test(table(PERSIST_1YR, CL))) #chi-square test for PERSIST by CL p-value < .05
with(CL1, chisq.test(table(PERSIST_1YR, SOC))) #chi-square test for PERSIST by SOC with CL present p-value > .05
with(CL1, chisq.test(table(PERSIST_1YR, FIRST_GEN))) #chi-square test for PERSIST by FIRST GEN with CL present p-value > .05
# 1ST-YR PERSISTENCE is associated with CL presence. Not associated with being SOC and First Gen Status for those with CL #

with(CL_FS, chisq.test(table(PERSIST_1YR, CL))) #chi-square test for PERSIST by FIRST GEN with CL present p-value > .05

# Logistic Regression #
#mod1 <- glm(PERSIST_1YR~SOC+FIRST_GEN+CL, family=binomial, data=finalData1)
#summary(mod1)

#hoslem.test(mod1$y, fitted(mod1), g=10) # expect p-value > .05

## odds ratios and 95% CI
#exp(cbind(OR = coef(mod1), confint(mod1)))
```

## Analysis 2: Student Achievement and Class Leaders Research - Comparing Program With CLs Versus Program Without CLs

1ST TERM GPA and 1 year persistence (enrolled in at least 12 credits the second semester)

```{r analysis2, echo=TRUE, tidy=TRUE, warning=FALSE, message=FALSE}
## Student Outcomes comparing program with CLs versus program without CLs ##
## Outcomes: 1st term GPA and 1-year persistence ##
## Exp group: YEAR = 2016 – 2019 AND SUCC_UNIV_101 = 1 AND CL = 1 ##
## Matched Control Group: YEAR = 2013 - 2015 AND TOOK_UNIV_101 = 1 AND CL = 0 ##
SS2_13_15 <- subset(SS, YEAR == c(2013:2015)) #1928 out of 13616
ExpGrp2 <- subset(SS_16_19, CL == "1" & SUCC_UNIV_101 == "1", select = c(CL,YEAR,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1YR)) #956 students
CntGrp2 <- subset(SS2_13_15, TOOK_UNIV_101 == "1" & CL == "0" , select = c(CL,YEAR,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1YR)) # 415
Std_Out2 <- rbind(ExpGrp2,CntGrp2) # 1371

# PSM for GPA AND 1 YR PERSISTENCE #
Std_Out2 %>%
  group_by(CL) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1YR=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))

with(Std_Out2, t.test(SEM_1_TERM_GPA ~ CL)) #- pvalue < .05 diff in means != 0
with(Std_Out2, chisq.test(table(PERSIST_1YR, CL))) # pvalue > .05 not associated


# Difference-in-means: pre-treatment covariates #
# SMD greater than 0.1 means imbalance of covariates #
Std_Out2_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_before2 <- CreateTableOne(vars = Std_Out2_cov, data = Std_Out2, strata = 'CL', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_before2 <- print(ImbTab_before2, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))


###  Propensity Score Estimation  ###

# LogR2 <- glm(CL ~ SOC + Gender + HS_GPA + FIRST_GEN + SEM_1_CREDITS,
#             family = binomial(), data = Std_Out2)
# summary(LogR2)
# 
# PSM2 <- data.frame(prop_score = predict(LogR2, type = "response"),
#                      CL = LogR2$model$CL) # calculate prop score for each student
# #head(PSM2)
# 
# # Examining the region of common support
# labs <- paste("Presence of Class Leader:", c("Yes", "No"))
# PSM2 %>%
#   mutate(CL = ifelse(CL == "1", labs[1], labs[2])) %>%
#   ggplot(aes(x = prop_score)) +
#   geom_histogram(color = "white") +
#   facet_wrap(~CL) +
#   xlab("Probability of having a Class Leader") +
#   theme_bw()


###################################
###  Propensity Score Matching  ###
###################################

# Executing a matching algorithm
Std_Out2_nomiss <- na.omit(Std_Out2)   # MatchIt does not allow missing values so we remove them

PSM2_match <- matchit(CL ~ SOC + Gender + HS_GPA + FIRST_GEN + SEM_1_CREDITS,
                     method = "nearest", data = Std_Out2_nomiss, caliper = .1)

#Check matching
summary(PSM2_match)
plot(PSM2_match)

# Extract matched dataset
finalData2 <- match.data(PSM2_match) 
dim(finalData2) #780 obs
head(finalData2) 

# Examining covariate balance in the matched sample
# Visual inspection
# It is useful to plot the mean of each covariate against the estimated propensity score, separately by treatment status. If matching is done well, the treatment and control groups will have (near) identical means of each covariate at each value of the propensity score.
# Check covariate balance #
bal.tab(PSM2_match,m.threshold=0.1)

Chk_bal2 <- function(dta, variable) {
  dta$variable <- dta[, variable]
  if (variable == 'Gender') dta$variable <- as.numeric(dta$variable)
  if (variable == 'FIRST_GEN') dta$variable <- as.numeric(dta$variable)
  if (variable == 'SOC') dta$variable <- as.numeric(dta$variable)
  if (variable == 'PERSIST_1YR') dta$variable <- as.numeric(dta$variable)
  dta$CL <- as.factor(dta$CL)
  support <- c(min(dta$variable), max(dta$variable))
  ggplot(dta, aes(x = distance, y = variable, color = CL)) +
    geom_point(alpha = 0.2, size = 1.3) +
    geom_smooth(method = "loess", se = F) +
    xlab("Propensity score") +
    ylab(variable) +
    theme_bw() +
    ylim(support)
}


grid.arrange(
   Chk_bal2(finalData2, "SEM_1_TERM_GPA"),
   Chk_bal2(finalData2, "SOC") + theme(legend.position = "none"),
   Chk_bal2(finalData2, "HS_GPA"),
   Chk_bal2(finalData2, "Gender") + theme(legend.position = "none"),
   Chk_bal2(finalData2, "FIRST_GEN"),
   Chk_bal2(finalData2, "SEM_1_CREDITS"),
   Chk_bal2(finalData2, "PERSIST_1YR"),
   nrow = 4, widths = c(1, 0.8)
)


# LOVE PLOT #
# Can be used in publications #
# Expect adjusted values to be within dashed lines #
v <- data.frame(old = c("SOC","Gender","HS_GPA","FIRST_GEN","SEM_1_CREDITS"),
new = c("Stdt of Color", "Gender", "High Sch GPA",'First Gen Status','# of Credits'))
love.plot(bal.tab(PSM2_match, m.threshold=0.1),
stat = "mean.diffs", var.names = v, abs = F)


#Difference-in-means
# SMD greater than 0.1 means imbalance of covariates #
# You can test this more formally using t-tests. Ideally, we should not be able to reject the null hypothesis of no mean difference for each covariate:
Std_Out2_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_after2 <- CreateTableOne(vars = Std_Out2_cov, data = finalData2, strata = 'CL', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_after2 <- print(ImbTab_after2, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))

# Variance Ratio #
# Less than 2 generally acceptable #
bal.tab(PSM2_match,v.threshold=2) 

# Prognostic Score for Assessing Balance #
# Performs better than MD and significance tests
# Expect SMD < .1 #
ctrl.data2 <- Std_Out2[Std_Out2$CL == "0",]
ctrl.fit2.y1 <- lm(SEM_1_TERM_GPA ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, data = ctrl.data2)
ctrl.fit2.y2 <- glm(PERSIST_1YR ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, family = binomial(), data = ctrl.data2)
Std_Out2$prog.score.y1 <- predict.lm(ctrl.fit2.y1, Std_Out2)
Std_Out2$prog.score.y2 <- predict.glm(ctrl.fit2.y2, Std_Out2)
bal.tab(PSM2_match, distance = na.omit(Std_Out2["prog.score.y1"])) # SMD < .1
bal.tab(PSM2_match, distance = na.omit(Std_Out2["prog.score.y2"])) # SMD < .1



# Distribition plot for numeric variable #
#(bal.plot(PSM2_match,var.name = 'HS_GPA',which = 'both'))
# Barplot for categorical variable #
#(bal.plot(PSM2_match,var.name = 'SOC',which = 'both'))

# Final Analysis #
# GPA by group #
finalData2 %>%
  group_by(SOC, FIRST_GEN, CL) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA))

finalData2  %>%
  group_by(CL) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1YR=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))


# Assumption Check #
CL1_2 <- subset(finalData2, CL=="1") # subset of students with CL
CL0_2 <- subset(finalData2, CL=="0") # subset of students without CL
hist(CL1_2$SEM_1_TERM_GPA, main = "With CL") # Distribution of students' GPA for those with CL
hist(CL0_2$SEM_1_TERM_GPA, main = "Without CL") # Distribution of students' GPA for those without CL
ggqqplot(finalData2$SEM_1_TERM_GPA)
shapiro.test(finalData2$SEM_1_TERM_GPA) # fails normality assumption


# t-test #
with(CL1_2, t.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #t-test GPA by FIRST GEN with CL
with(CL1_2, t.test(SEM_1_TERM_GPA ~ SOC)) #t-test GPA by SOC with CL
with(finalData2, t.test(SEM_1_TERM_GPA ~ CL)) #t-test GPA by CL overall
# all p-values < .05 - statistically significant
# 1ST SEMESTER GPA on average is different by First Gen Status and being a SOC with CL; and overall CL presence #

# Mann-Whitney-Wilcoxon #
with(CL1_2, wilcox.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #Mann-Whitney-Wilcoxon test GPA by FIRST GEN with CL
with(CL1_2, wilcox.test(SEM_1_TERM_GPA ~ SOC)) #Mann-Whitney-Wilcoxon test GPA by SOC with CL
with(finalData2, wilcox.test(SEM_1_TERM_GPA ~ CL)) #Mann-Whitney-Wilcoxon test GPA by CL overall
# all p-values < .05 - statistically significant
# 1ST SEMESTER GPA on average is different by First Gen Status and being a SOC with CL present; and overall CL presence #

#ANOVmod2 <- aov(SEM_1_TERM_GPA ~ SOC*CL*FIRST_GEN, data=finalData2) # 3-way ANOVA to avoid error of multiple testing. One Interaction is significant: SOC & FIRST GEN
#summary(ANOVmod2) # main effects are significant p-value < .05 with 2 two way interactions - SOC & FirstGen, SOC & CL

## Check Assumptions ##
# Normality
#qqnorm(ANOVmod2$residuals)
#qqline(ANOVmod2$residuals) # fails normality assumption

# Compute Shapiro-Wilk test of normality - fails normailty assumption p < .05
#shapiro.test(ANOVmod2$residuals)


# PostHoc Test
#TukeyHSD(ANOVmod2)

# Two-Way Tables #
xtabs(~finalData2$PERSIST_1YR+finalData2$CL)
prop.table(xtabs(~finalData2$PERSIST_1YR+finalData2$CL))
xtabs(~CL1_2$PERSIST_1YR+CL1_2$SOC)
prop.table(xtabs(~CL1_2$PERSIST_1YR+CL1_2$SOC))
xtabs(~CL1_2$PERSIST_1YR+CL1_2$FIRST_GEN)
prop.table(xtabs(~CL1_2$PERSIST_1YR+CL1_2$FIRST_GEN))
# all four expected counts are atleast 5 


# Chi-square test of Homogeneity #
with(finalData2, chisq.test(table(PERSIST_1YR, CL))) #chi-square test for PERSIST by CL overall p-value > .05
with(CL1_2, chisq.test(table(PERSIST_1YR, SOC))) #chi-square test for PERSIST by SOC with CL present p-value > .05
with(CL1_2, chisq.test(table(PERSIST_1YR, FIRST_GEN))) #chi-square test PERSIST by FIRST GEN with CL present p-value > .05
# 1ST-YR PERSISTENCE is not associated with First Gen Status and being a SOC with CL present; and overall CL presence #

# Logistic Regression #
#mod2 <- glm(PERSIST_1YR~SOC+FIRST_GEN+CL, family=binomial, data=finalData2)
#summary(mod2)

#hoslem.test(mod2$y, fitted(mod2), g=10) # expect p-value > .05

## odds ratios and 95% CI
#exp(cbind(OR = coef(mod2), confint(mod2)))
```


## Analysis 3: Summer Support Research - Comparing Student Outcomes for Summer Support Participants Versus Summer Support Non-Participants

1ST TERM GPA and 1 semester persistence (enrolled in at least 12 credits the second semester)

```{r analysis3, echo=TRUE, tidy=TRUE, warning=FALSE, message=FALSE}
SS1 <- readxl::read_xlsx("/Users/agboo/OneDrive - University of Northern Colorado/Analysis/UNIV101_SS/2016 - 2020 - ONE SEMESTER_CODED.xlsx")
SS1 <- as.data.frame(SS1)
colnames(SS1)[1] <- "ID"
colnames(SS1)[4] <- "Gender"
colnames(SS1)[5] <- "BLACK"
colnames(SS1)[7] <- "ASIAN"
colnames(SS1)[11] <- "FIRST_GEN"
colnames(SS1)[28] <- "HS_GPA"
sum(is.na(SS1))/prod(dim(SS1)) # missingness < 5%
SS1$ID[duplicated(SS1$ID)] # identify duplicates - 801870240
SS1 <- SS1[-8241,] # remove duplicate in 2020
SS1 <- SS1 %>%
  mutate(
    BLACK = as.factor(BLACK),
    NAT_AMER = as.factor(NAT_AMER),
    ASIAN = as.factor(ASIAN),
    PAC_ISLANDER = as.factor(PAC_ISLANDER),
    HISPANIC = as.factor(HISPANIC),
    YEAR = as.numeric(YEAR),
    SUM_SUPPORT = as.factor(SUM_SUPPORT),
    PERSIST_1SEM = as.factor(PERSIST_1SEM),
    SEM_1_TERM_GPA = as.numeric(SEM_1_TERM_GPA),
    Gender = as.factor(Gender),
    FIRST_GEN = as.factor(FIRST_GEN),
    HS_GPA = as.numeric(HS_GPA),
    SUCC_UNIV_101 = as.factor(SUCC_UNIV_101),
    SEM_1_CREDITS = as.numeric(SEM_1_CREDITS),
    TOOK_UNIV101 = as.factor(TOOK_UNIV101),
    SOC = as.factor(ifelse(BLACK == "1"| NAT_AMER == "1" | ASIAN == "1"| PAC_ISLANDER == "1"| HISPANIC == "1","1","0" )),
    FIRST_GEN = as.factor(ifelse(FIRST_GEN == "1","1",ifelse(FIRST_GEN == "0", "0", NA)))
  )

## Student Outcomes comparing Summer Support Participants Versus Summer Support Non-Participants ##
## Outcomes: 1st term GPA and 1-semester persistence ##
## Exp group: YEAR = 2020 AND SUM_SUPPORT = 1 ##
## Matched Control Group: YEAR = 2020 AND SUM_SUPPORT = 0 ##
SS3_20 <- subset(SS1, YEAR == 2020) #1298 out of 9134
ExpGrp3 <- subset(SS3_20, SUM_SUPPORT == "1", select = c(SUM_SUPPORT,SUCC_UNIV_101,TOOK_UNIV101,YEAR,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1SEM)) #258 students
CntGrp3 <- subset(SS3_20, SUM_SUPPORT == "0", select = c(SUM_SUPPORT,YEAR,SUCC_UNIV_101,TOOK_UNIV101,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1SEM)) # 1040 students
Std_Out3 <- rbind(ExpGrp3,CntGrp3) # 1298

# PSM for GPA AND 1 SEM PERSISTENCE #
Std_Out3 %>%
  group_by(SUM_SUPPORT) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1SEM=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))

with(Std_Out3, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #- pvalue < .05 diff in means != 0
with(Std_Out3, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) # pvalue < .05 associated


# Difference-in-means: pre-treatment covariates #
# SMD greater than 0.1 means imbalance of covariates #
Std_Out3_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_before3 <- CreateTableOne(vars = Std_Out3_cov, data = Std_Out3, strata = 'SUM_SUPPORT', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_before3 <- print(ImbTab_before3, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))


###################################
###  Propensity Score Matching  ###
###################################

# Executing a matching algorithm
Std_Out3_nomiss <- na.omit(Std_Out3)   # MatchIt does not allow missing values so we remove them

PSM3_match <- matchit(SUM_SUPPORT ~ SOC + Gender + HS_GPA + FIRST_GEN + SEM_1_CREDITS,
                     method = "nearest", data = Std_Out3_nomiss, caliper = .1)

#Check matching
summary(PSM3_match)
plot(PSM3_match)

# Extract matched dataset
finalData3 <- match.data(PSM3_match) 
dim(finalData3) #502 obs
head(finalData3) 

# Examining covariate balance in the matched sample
# Visual inspection
# It is useful to plot the mean of each covariate against the estimated propensity score, separately by treatment status. If matching is done well, the treatment and control groups will have (near) identical means of each covariate at each value of the propensity score.
# Check covariate balance #
bal.tab(PSM3_match,m.threshold=0.1)

Chk_bal3 <- function(dta, variable) {
  dta$variable <- dta[, variable]
  if (variable == 'Gender') dta$variable <- as.numeric(dta$variable)
  if (variable == 'FIRST_GEN') dta$variable <- as.numeric(dta$variable)
  if (variable == 'SOC') dta$variable <- as.numeric(dta$variable)
  if (variable == 'PERSIST_1SEM') dta$variable <- as.numeric(dta$variable)
  dta$CL <- as.factor(dta$SUM_SUPPORT)
  support <- c(min(dta$variable), max(dta$variable))
  ggplot(dta, aes(x = distance, y = variable, color = CL)) +
    geom_point(alpha = 0.2, size = 1.3) +
    geom_smooth(method = "loess", se = F) +
    xlab("Propensity score") +
    ylab(variable) +
    theme_bw() +
    ylim(support)
}


grid.arrange(
   Chk_bal3(finalData3, "SEM_1_TERM_GPA"),
   Chk_bal3(finalData3, "SOC") + theme(legend.position = "none"),
   Chk_bal3(finalData3, "HS_GPA"),
   Chk_bal3(finalData3, "Gender") + theme(legend.position = "none"),
   Chk_bal3(finalData3, "FIRST_GEN"),
   Chk_bal3(finalData3, "SEM_1_CREDITS"),
   Chk_bal3(finalData3, "PERSIST_1SEM"),
   nrow = 4, widths = c(1, 0.8)
)


# LOVE PLOT #
# Can be used in publications #
# Expect adjusted values to be within dashed lines #
v <- data.frame(old = c("SOC","Gender","HS_GPA","FIRST_GEN","SEM_1_CREDITS"),
new = c("Stdt of Color", "Gender", "High Sch GPA",'First Gen Status','# of Credits'))
love.plot(bal.tab(PSM3_match, m.threshold=0.1),
stat = "mean.diffs", var.names = v, abs = F)


#Difference-in-means
# SMD greater than 0.1 means imbalance of covariates #
# You can test this more formally using t-tests. Ideally, we should not be able to reject the null hypothesis of no mean difference for each covariate:
Std_Out3_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_after3 <- CreateTableOne(vars = Std_Out3_cov, data = finalData3, strata = 'SUM_SUPPORT', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_after3 <- print(ImbTab_after3, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))

# Variance Ratio #
# Less than 2 generally acceptable #
bal.tab(PSM3_match,v.threshold=2) 

# Prognostic Score for Assessing Balance #
# Performs better than MD and significance tests
# Expect SMD < .1 #
ctrl.data3 <- Std_Out3[Std_Out3$SUM_SUPPORT == "0",]
ctrl.fit3.y1 <- lm(SEM_1_TERM_GPA ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, data = ctrl.data3)
ctrl.fit3.y2 <- glm(PERSIST_1SEM ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, family = binomial(), data = ctrl.data3)
Std_Out3$prog.score.y1 <- predict.lm(ctrl.fit3.y1, Std_Out3)
Std_Out3$prog.score.y2 <- predict.glm(ctrl.fit3.y2, Std_Out3)
bal.tab(PSM3_match, distance = na.omit(Std_Out3["prog.score.y1"])) # SMD < .1
bal.tab(PSM3_match, distance = na.omit(Std_Out3["prog.score.y2"])) # SMD < .1



# Distribition plot for numeric variable #
#(bal.plot(PSM2_match,var.name = 'HS_GPA',which = 'both'))
# Barplot for categorical variable #
#(bal.plot(PSM2_match,var.name = 'SOC',which = 'both'))

# Final Analysis #
# GPA by group #
finalData3 %>%
  group_by(SOC, FIRST_GEN, SUM_SUPPORT) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA))

finalData3  %>%
  group_by(SUM_SUPPORT) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1SEM=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))


# Assumption Check #
SumSup1 <- subset(finalData3, SUM_SUPPORT=="1") # subset of students with summer support
SumSup0 <- subset(finalData3, SUM_SUPPORT=="0") # subset of students without summer support
SumSup1_FS <- subset(finalData3, SUM_SUPPORT=="1" & FIRST_GEN=="1" & SOC == "1")  # subset of first gen students and SOC with summer support
SumSup0_FS <- subset(finalData3, SUM_SUPPORT=="0" & FIRST_GEN=="1" & SOC == "1") # subset of first gen students and SOC without summer support
SumSup_FS <- rbind(SumSup1_FS,SumSup0_FS)
SumSup1_F <- subset(SumSup1, FIRST_GEN=="1")  # subset of first gen students with summer support
SumSup0_F <- subset(SumSup0, FIRST_GEN=="1")  # subset of first gen students without summer support
SumSup_F <- rbind(SumSup1_F,SumSup0_F) # combine the two groups
SumSup1_S <- subset(SumSup1, SOC=="1")  # subset of SOC with summer support
SumSup0_S <- subset(SumSup0, SOC=="1")  # subset of SOC without summer support
SumSup_S <- rbind(SumSup1_S,SumSup0_S) # combine the two groups
hist(SumSup1$SEM_1_TERM_GPA, main = "With Summer Support") # Distribution of students' GPA for those with summer support
hist(SumSup0$SEM_1_TERM_GPA, main = "Without Summer Support") # Distribution of students' GPA for those without summer support
ggqqplot(finalData3$SEM_1_TERM_GPA)
shapiro.test(finalData3$SEM_1_TERM_GPA) # fails normality assumption

# t-test #
with(SumSup1, t.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #t-test GPA by FIRST GEN with SUM_SUPPORT - p-value < .05
with(SumSup1, t.test(SEM_1_TERM_GPA ~ SOC)) #t-test GPA by SOC with SUM_SUPPORT - p-value > .05
with(finalData3, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by SUM_SUPPORT - p-value < .05
with(SumSup_FS, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT))
# 1ST SEMESTER GPA median is different by First Gen Status with summer support present; and overall summer support presence #

# Mann-Whitney-Wilcoxon #
with(SumSup1, wilcox.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #Mann-Whitney-Wilcoxon test GPA by FIRST GEN with SUM_SUPPORT - p-value < .05
with(SumSup1, wilcox.test(SEM_1_TERM_GPA ~ SOC)) #Mann-Whitney-Wilcoxon test GPA by SOC with SUM_SUPPORT - p-value > .05
with(finalData3, wilcox.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #Mann-Whitney-Wilcoxon test GPA by SUM_SUPPORT - p-value < .05
# result is the same as t-test
# 1ST SEMESTER GPA median is different by First Gen Status with summer support present; and overall summer support presence #

# Two-Way Tables #
xtabs(~finalData3$PERSIST_1SEM+finalData3$SUM_SUPPORT)
prop.table(xtabs(~finalData3$PERSIST_1SEM+finalData3$SUM_SUPPORT))
xtabs(~SumSup1$PERSIST_1SEM+SumSup1$SOC)
xtabs(~SumSup0$PERSIST_1SEM+SumSup0$SOC)
xtabs(~SumSup1$PERSIST_1SEM+SumSup1$FIRST_GEN)
xtabs(~SumSup0$PERSIST_1SEM+SumSup0$FIRST_GEN)
# all four expected counts are at least 5 


# Counts
SumSup1 %>%
group_by(PERSIST_1SEM, SOC, FIRST_GEN) %>% # to get the counts in each subgroup for CL
summarize(count = n())

# Counts
SumSup0 %>%
group_by(PERSIST_1SEM, SOC, FIRST_GEN) %>% # to get the counts in each subgroup for non-CL
summarize(count = n())


# Chi-square test of Homogeneity #
with(finalData3, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test PERSIST by SUM_SUPPORT p-value < .05
with(SumSup1, chisq.test(table(PERSIST_1SEM, SOC))) #chi-square test PERSIST by SOC p-value > .05
with(SumSup1, chisq.test(table(PERSIST_1SEM, FIRST_GEN))) #chi-square test PERSIST by FIRST GEN p-value > .05
# 1ST SEMESTER PERSISTENCE is only associated with Summer Support participation #
with(SumSup_FS, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test for PERSIST by FIRST GEN and SOC with summer support present p-value > .05
with(SumSup_F, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test for PERSIST by FIRST GEN with summer support present p-value > .05
with(SumSup_S, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test for PERSIST by SOC with summer support present p-value > .05

# Logistic Regression #
#mod3 <- glm(PERSIST_1SEM~SOC+FIRST_GEN+SUM_SUPPORT, family=binomial, data=finalData3)
#summary(mod3)

#hoslem.test(mod3$y, fitted(mod3), g=10) # expect p-value > .05

## odds ratios and 95% CI
#exp(cbind(OR = coef(mod3), confint(mod3)))
```


## Analysis 4: Summer Support Research - Comparing Student Outcomes for Program with Summer Support versus Program Without Summer Support

1ST TERM GPA and 1-semester persistence (enrolled in at least 12 credits the second semester)

```{r analysis4, echo=TRUE, tidy=TRUE, warning=FALSE, message=FALSE}
## Student Outcomes comparing program with Summer Support versus program without Summer Support ##
## Outcomes: 1st term GPA and 1-semester persistence ##
## Exp group: YEAR = 2020 AND SUCC_UNIV_101 = 1 AND SUM_SUPPORT = 1 ##
## Matched Control Group: YEAR = 2016 - 2019 AND TOOK_UNIV101 = 1 AND SUM_SUPPORT = 0 ##
ExpGrp4 <- subset(SS3_20, SUM_SUPPORT == "1" & SUCC_UNIV_101 == "1", select = c(SUCC_UNIV_101,SUM_SUPPORT,TOOK_UNIV101,YEAR,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1SEM)) #258 students
CntGrp4 <- subset(SS1, YEAR==c(2016:2019) & TOOK_UNIV101 == "1" & SUM_SUPPORT == "0", select = c(SUCC_UNIV_101,SUM_SUPPORT,TOOK_UNIV101,YEAR,SOC,SEM_1_TERM_GPA,Gender,HS_GPA,FIRST_GEN,SEM_1_CREDITS,PERSIST_1SEM)) # 443 students
Std_Out4 <- rbind(ExpGrp4,CntGrp4) # 701

# PSM for GPA AND 1 SEM PERSISTENCE #
Std_Out4 %>%
  group_by(SUM_SUPPORT) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1SEM=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))

with(Std_Out4, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #- pvalue < .05 diff in means != 0
with(Std_Out4, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) # pvalue > .05 not associated


# Difference-in-means: pre-treatment covariates #
# SMD greater than 0.1 means imbalance of covariates #
Std_Out4_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_before4 <- CreateTableOne(vars = Std_Out4_cov, data = Std_Out4, strata = 'SUM_SUPPORT', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_before4 <- print(ImbTab_before4, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))


###################################
###  Propensity Score Matching  ###
###################################

# Executing a matching algorithm
Std_Out4_nomiss <- na.omit(Std_Out4)   # MatchIt does not allow missing values so we remove them

PSM4_match <- matchit(SUM_SUPPORT ~ SOC + Gender + HS_GPA + FIRST_GEN + SEM_1_CREDITS,
                     method = "nearest", data = Std_Out4_nomiss, caliper = .1)

#Check matching
summary(PSM4_match)
plot(PSM4_match)

# Extract matched dataset
finalData4 <- match.data(PSM4_match) 
dim(finalData4) #484 obs
head(finalData4) 

# Examining covariate balance in the matched sample
# Visual inspection
# It is useful to plot the mean of each covariate against the estimated propensity score, separately by treatment status. If matching is done well, the treatment and control groups will have (near) identical means of each covariate at each value of the propensity score.
# Check covariate balance #
bal.tab(PSM4_match,m.threshold=0.1)

Chk_bal4 <- function(dta, variable) {
  dta$variable <- dta[, variable]
  if (variable == 'Gender') dta$variable <- as.numeric(dta$variable)
  if (variable == 'FIRST_GEN') dta$variable <- as.numeric(dta$variable)
  if (variable == 'SOC') dta$variable <- as.numeric(dta$variable)
  if (variable == 'PERSIST_1SEM') dta$variable <- as.numeric(dta$variable)
  dta$CL <- as.factor(dta$SUM_SUPPORT)
  support <- c(min(dta$variable), max(dta$variable))
  ggplot(dta, aes(x = distance, y = variable, color = CL)) +
    geom_point(alpha = 0.2, size = 1.3) +
    geom_smooth(method = "loess", se = F) +
    xlab("Propensity score") +
    ylab(variable) +
    theme_bw() +
    ylim(support)
}


grid.arrange(
   Chk_bal4(finalData3, "SEM_1_TERM_GPA"),
   Chk_bal4(finalData3, "SOC") + theme(legend.position = "none"),
   Chk_bal4(finalData3, "HS_GPA"),
   Chk_bal4(finalData3, "Gender") + theme(legend.position = "none"),
   Chk_bal4(finalData3, "FIRST_GEN"),
   Chk_bal4(finalData3, "SEM_1_CREDITS"),
   Chk_bal4(finalData3, "PERSIST_1SEM"),
   nrow = 4, widths = c(1, 0.8)
)


# LOVE PLOT #
# Can be used in publications #
# Expect adjusted values to be within dashed lines #
v <- data.frame(old = c("SOC","Gender","HS_GPA","FIRST_GEN","SEM_1_CREDITS"),
new = c("Stdt of Color", "Gender", "High Sch GPA",'First Gen Status','# of Credits'))
love.plot(bal.tab(PSM4_match, m.threshold=0.1),
stat = "mean.diffs", var.names = v, abs = F)


#Difference-in-means
# SMD greater than 0.1 means imbalance of covariates #
# You can test this more formally using t-tests. Ideally, we should not be able to reject the null hypothesis of no mean difference for each covariate:
Std_Out4_cov <- c('SOC', 'Gender', 'HS_GPA', 'FIRST_GEN', 'SEM_1_CREDITS')
ImbTab_after4 <- CreateTableOne(vars = Std_Out4_cov, data = finalData4, strata = 'SUM_SUPPORT', factorVars = c('SOC','Gender','FIRST_GEN'), smd = T)
(ImbTab_after4 <- print(ImbTab_after4, printToggle = FALSE, noSpaces = TRUE, smd=TRUE, quote=T))

# Variance Ratio #
# Less than 2 generally acceptable #
bal.tab(PSM4_match,v.threshold=2) 

# Prognostic Score for Assessing Balance #
# Performs better than MD and significance tests
# Expect SMD < .1 #
ctrl.data4 <- Std_Out4[Std_Out4$SUM_SUPPORT == "0",]
ctrl.fit4.y1 <- lm(SEM_1_TERM_GPA ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, data = ctrl.data4)
ctrl.fit4.y2 <- glm(as.factor(PERSIST_1SEM) ~ SOC+Gender+HS_GPA+FIRST_GEN+SEM_1_CREDITS, family = binomial(), data = ctrl.data4)
Std_Out4$prog.score.y1 <- predict.lm(ctrl.fit4.y1, Std_Out4)
Std_Out4$prog.score.y2 <- predict.glm(ctrl.fit4.y2, Std_Out4)
bal.tab(PSM4_match, distance = na.omit(Std_Out4["prog.score.y1"])) # SMD < .1
bal.tab(PSM4_match, distance = na.omit(Std_Out4["prog.score.y2"])) # SMD < .1



# Distribition plot for numeric variable #
#(bal.plot(PSM2_match,var.name = 'HS_GPA',which = 'both'))
# Barplot for categorical variable #
#(bal.plot(PSM2_match,var.name = 'SOC',which = 'both'))

# Final Analysis #
# GPA by group #
finalData4 %>%
  group_by(SOC, FIRST_GEN, SUM_SUPPORT) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA))

finalData4  %>%
  group_by(SUM_SUPPORT) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA),
            Prop_Persist = mean(PERSIST_1SEM=="1"),
            std_error = sd(SEM_1_TERM_GPA)/sqrt(n_students))


# Assumption Check #
SumSup1_2 <- subset(finalData4, SUM_SUPPORT=="1") # subset of students with summer support
SumSup0_2 <- subset(finalData4, SUM_SUPPORT=="0") # subset of students without summer support
SumSup1_2F <- subset(SumSup1_2, FIRST_GEN=="1") # subset of first gen students with summer support
SumSup0_2F <- subset(SumSup0_2, FIRST_GEN=="1") # subset of first gen students without summer support
SumSup_2F <- rbind(SumSup1_2F, SumSup0_2F) # combine both groups
SumSup1_2S <- subset(SumSup1_2, SOC=="1") # subset of SOC with summer support
SumSup0_2S <- subset(SumSup0_2, SOC=="1") # subset of SOC without summer support
SumSup_2S <- rbind(SumSup1_2S, SumSup0_2S) # combine both groups
SumSup1_2FS <- subset(SumSup1_2, FIRST_GEN=="1" & SOC=="1") # subset of first gen students and SOC with summer support
SumSup0_2FS <- subset(SumSup0_2, FIRST_GEN=="1" & SOC=="1") # subset of first gen students and SOC without summer support
SumSup_2FS <- rbind(SumSup1_2FS, SumSup0_2FS) # combine both groups
hist(SumSup1_2$SEM_1_TERM_GPA, main = "With Summer Support") # Distribution of students' GPA for those with summer support
hist(SumSup0_2$SEM_1_TERM_GPA, main = "Without Summer Support") # Distribution of students' GPA for those without summer support
ggqqplot(finalData4$SEM_1_TERM_GPA)
shapiro.test(finalData4$SEM_1_TERM_GPA) # fails normality assumption

# t-test #
#with(SumSup1_2, t.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #t-test GPA by FIRST GEN with summer support - p-value < .05
#with(SumSup1_2, t.test(SEM_1_TERM_GPA ~ SOC)) #t-test GPA by SOC with summer support - p-value > .05
with(finalData4, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by overall summer support - p-value > .05
# 1ST SEMESTER GPA on average is different by First Gen Status with summer support #
with(SumSup_2F, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by FIRST GEN with summer support - p-value > .05
with(SumSup_2S, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by SOC with summer support - p-value < .05
with(SumSup_2FS, t.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by FIRST GEN & SOC with summer support - p-value > .05

# Mann-Whitney-Wilcoxon #
#with(SumSup1_2, wilcox.test(SEM_1_TERM_GPA ~ FIRST_GEN)) #Mann-Whitney-Wilcoxon test GPA by FIRST GEN with summer support - p-value < .05
#with(SumSup1_2, wilcox.test(SEM_1_TERM_GPA ~ SOC)) #Mann-Whitney-Wilcoxon test GPA by SOC with summer support - p-value < .05
with(finalData4, wilcox.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #Mann-Whitney-Wilcoxon test GPA by overall SUM_SUPPORT - p-value > .05
# t-test result different for SOC with summer support - Go with Mann-Whitney-Wilcoxon
# 1ST SEMESTER GPA on average is different by First Gen Status and being a SOC with summer support #
with(SumSup_2F, wilcox.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by FIRST GEN with summer support - p-value > .05
with(SumSup_2S, wilcox.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by SOC with summer support - p-value < .05
with(SumSup_2FS, wilcox.test(SEM_1_TERM_GPA ~ SUM_SUPPORT)) #t-test GPA by FIRST GEN & SOC with summer support - p-value > .05

SumSup_2S %>%
  group_by(SUM_SUPPORT) %>%
  summarise(n_students = n(),
            mean_GPA = mean(SEM_1_TERM_GPA))

# Two-Way Tables #
xtabs(~finalData4$PERSIST_1SEM+finalData4$SUM_SUPPORT)
prop.table(xtabs(~finalData4$PERSIST_1SEM+finalData4$SUM_SUPPORT))
xtabs(~SumSup1_2$PERSIST_1SEM+SumSup1_2$SOC)
prop.table(xtabs(~SumSup1_2$PERSIST_1SEM+SumSup1_2$SOC))
xtabs(~SumSup1_2$PERSIST_1SEM+SumSup1_2$FIRST_GEN)
prop.table(xtabs(~SumSup1_2$PERSIST_1SEM+SumSup1_2$FIRST_GEN))
xtabs(~SumSup_2S$PERSIST_1SEM+SumSup_2S$SUM_SUPPORT)
xtabs(~SumSup_2F$PERSIST_1SEM+SumSup_2F$SUM_SUPPORT)
xtabs(~SumSup_2FS$PERSIST_1SEM+SumSup_2FS$SUM_SUPPORT)
# all four expected counts are at least 5 


# Chi-square test of Homogeneity #
with(finalData4, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test PERSIST by SUM_SUPPORT p-value > .05
with(SumSup1_2, chisq.test(table(PERSIST_1SEM, SOC))) #chi-square test PERSIST by SOC p-value > .05
with(SumSup1_2, chisq.test(table(PERSIST_1SEM, FIRST_GEN))) #chi-square test PERSIST by FIRST GEN p-value > .05
# 1ST SEMESTER PERSISTENCE is not associated with First Gen Status and being a SOC with summer support; and overall Summer Support participation #

with(SumSup_2S, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test PERSIST by SOC p-value > .05
with(SumSup_2F, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test PERSIST by FIRST GEN p-value > .05
with(SumSup_2FS, chisq.test(table(PERSIST_1SEM, SUM_SUPPORT))) #chi-square test PERSIST by FIRST GEN p-value > .05
# Logistic Regression #
#mod4 <- glm(as.factor(PERSIST_1SEM)~SOC+FIRST_GEN+SUM_SUPPORT, family=binomial, data=finalData4)
#summary(mod4)

#hoslem.test(mod4$y, fitted(mod4), g=10) # expect p-value > .05

## odds ratios and 95% CI
#exp(cbind(OR = coef(mod4), confint(mod4)))
```

<!-- <script type="text/javascript"> -->
<!--   // When the document is fully rendered... -->
<!--   $(document).ready(function() { -->
<!--     // ...select all header elements... -->
<!--     $('h1, h2, h3, h4, h5').each(function() { -->
<!--       // ...and add an id to them corresponding to their 'titles' -->
<!--       $(this).attr('id', $(this).html()); -->
<!--     }); -->
<!--   }); -->
<!-- </script> -->


